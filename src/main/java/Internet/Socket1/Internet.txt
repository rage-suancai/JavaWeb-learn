Java网络编程
在JavaSE阶段 我们学习了I/O流 既然I/O流如此强大 那么能否跨越不同的主机进行I/O操作呢? 这就要提到Java的网络编程了

计算机网络基础
利用通信线路和通信设备 将地理位置不同的 功能独立的多台计算机互连起来 以功能完善的网络软件来实现资源共享和信息传递 就构成了计算机网络系统

比如我们家里的路由器 通过将我们的设备(手机 平板 电脑 电视机)连接到路由器 来实现对互联网的访问 实际上 我们的路由器连接在互联网上
而我们的设备又连接了路由器 这样我们的设备就可以通过路由器访问到互联网了 通过网络 我们可以直接访问互联网上的另一台主机
比如我们要把QQ的消息发送给我们的朋友 或是通过远程桌面管理来操作另一台电脑 也可以是连接本地网络上的打印机

既然我们可以通过网络访问其他计算机 那么如何区别不同的计算机呢? 通过IP地址 我们就可以区分不同的计算机了:

                    E1: 192.168.1.254       E0: 10.0.0.254       E2: 172.16.1.254
                     网络192.168..1.0         网络10.0.0.0         网络:172.16.0.0
                       192.168.1.1             10.0.0.1             172.16.1.1
                       192.168.1.2             10.0.0.2             172.16.1.2

每一台电脑在同一个网络上都有一个自己的IP地址 用于区别于其他的电脑 我们可以通过对方主机的IP地址对其进行访问
那么我们手机连接的移动流量 能访问到连接家里路由器的电脑吗?(不能 因为它们不属于同一个网络)

而我们的电脑上可能运行着大量的程序 每一个程序可能都需要通过网络来访问其他计算机 那这时该如何区分呢? 我们可以通过端口号来区分:

                                                --端口号--> 应用程序
                    源计算机 --IP地址--> 目标计算机 --端口号--> 应用程序
                                                --端口号--> 应用程序

因此 我们一般看到的是这样的: 192.168.0.11:8080 通过IP:端口号的形式来访问目标主机上的一个应用程序服务 注意端口号只能是0-65535之间的值

IP地址分为IPv4和IPv6 IPv4类似于192.168.0.11 我们上面提到的例子都是使用的IPv4 它一共有四组数字 每组数字占8个bit位 IPv4地址0.0.0.0表示为2进制就是:

                    00000000.00000000.00000000.00000000

共32个bit 最大为255.255.255.255 实际上 IPv4能够表示的所有地址 早就已经被用完了 IPv6能够保存128个bit位
因此它也可以表示更多的IP地址 一个IPv6地址看起来像这样: 1030::C9B4:FF12:48AA:1A2B 目标也正在向IPv6的阶段过度

TCP和UDP是两种不同的传输层协议:

    > TCP: 当一台计算机想要与另一台计算机通讯时 两台计算机之间的通信需要畅通且可靠(会进行三次握手 断开也会进行四次挥手)
           这样才能保证正确收发数据 因此TCP更适合一些可靠的数据传输场景

    > UDP: 它是一种无连接协议 数据想发就发 而且不会建立可靠传输 也就是锁传输过程中有可能会导致部分数据丢失 但是它比TCP传输更加简单 适合视频直播之类的


事务
当我们进行操作非常多时 比如要依次删除很多个表的数据 我们就需要执行大量的SQL语句来完成 这些数据库操作语句就可以构成一个事务 只有innodb引擎支持事务 我们可以这样来查看支持的引擎:
                    show engines;

MySQL默认采用的是innodb引擎 我们也可以去修改为其他的引擎

事务具有以下特性:
    > 原子性: 一个事务(transaction)中的所有操作 要么全部完成 要么全部不完成 不会结束在中间某个环节 事务在执行过程中发生错误 会被回滚(Rollback)到事务开始前的状态 就像这个事务从来没有执行过一样
    > 一致性: 在事务开始之前和事务结束以后 数据库的完整性没有被破坏 这表示写入的资料必须完全符合所有的预设规则 这包含资料的精确度 串联性以及后续数据库可以自发性完成预定的工作
    > 隔离性: 数据库允许多个并发事务同时对其数据进行读写和修改的能力 隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致 事务隔离分为不同级别: 包括
             读未提交(ReadUncommitted) 读提交(Read committed) 可重复读(Repeatable read) 串行化(Serializable)
    > 持久性: 事务处理结束后 对数据的修改就是永久的 即便系统故障也不会丢失

我们通过以下例子来探究一下事务:
                    begin; #开始事务
                    ...
                    rollback; #回滚事务
                    savepoint 回滚点; #添加回滚点
                    rollback to 回滚点; #回滚到指定回滚点
                    ...
                    commit; #提交事务
                    -- 一旦提交 就无法再进行回滚了
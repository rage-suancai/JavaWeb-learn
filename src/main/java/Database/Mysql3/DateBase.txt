数据库的规范化
要去设计存放一个实体的表 我们就需要了解数据库的关系规范化 尽可能减少"不好"的关系存在 如何设计一个优良的关系模型是最关键的内容 简而言之 我们要学习一下每一个表该如何去设计

第一范式(1NF)
第一范式是指数据库的每一列都是不可分割的基本数据项 而下面这样的就存在可分割的情况:

    > 学生 (姓名 电话号码)

电话号码实际上包括了家用座机电话和移动电话 因此它可以被拆分为:

    > 学生 (姓名 座机号码 手机号码)

满足第一范式是关系数据库最基本的要求

第二范式(2NF)
第二范式要求表中必须存在主键 且其他的属性必须完全依赖于主键 比如:

    > 学生 (学号 姓名 性别)

学号是每个学生的唯一标识 每个学生都有着不同的学号 因此此表中存在一个主键 并且每个学生的所有属性都依赖于学号 学号发生改变就代表学生发生改变 姓名和性别都会因此发生改变 所以此表满足第二个范式

第三范式(3NF)
在满足第二范式的情况下 所有的属性都不传递依赖于主键 满足第三范式

    > 学生借书情况 (借阅编号 学生学号 书籍编号 书籍作者)

实际上书籍编号依赖于借阅编号 而书籍名称和书籍作者依赖于书籍编号 因此存在传递依赖的情况 我们可以将书籍信息进行单独拆分为另一张表:

    > 学生借书情况 (借阅编号 学生学号 书籍编号)
    > 书籍 (书籍编号 书籍名称 书籍作者)

这样就消除了传递依赖 从而满足第三范式

BCNF
BCNF作为第三范式的补充 假设仓库管理关系表为StorehouseManage(仓库ID 储存物品ID 数量) 且有一个管理员只在一个仓库工作 一个仓库可以存储多种物品 这个数据库表中存在如下决定关系:

    > (仓库ID 存储物品ID) -> (管理员ID 数量)
    > (管理员ID 储存物品ID) -> (仓库ID 数量)

所以 (仓库ID 存储物品ID)和(管理员ID 存储物品ID)都是StorehouseManage的候选关键字 表中的唯一非关键字段为数量 它是符合第三范式的 但是 由于存在如下决定关系:

    > (仓库ID) -> (管理员ID)
    > (管理员ID) -> (仓库ID)

即存在关键字决定关键字段的情况 如果修改管理员ID 那么就必须逐一进行修改 所以其不符合BCNF范式
数据库查询语言(DQL)
数据库的查询是我们整个数据库学习中的重点内容 面对数据库中庞大的数据 该如何去寻找我们想要的数据 就是我们主要讨论的问题

单表查询
单表查询是最简单的一种查询 我们在需要在一张表中去查找数据即可 通过使用select语句来进行单表查询:
                    -- 指定查询某一列数据
                    select 列名[,列名] from 表名;
                    -- 会以别名显示此列
                    select 列名 别名 from 表名;
                    -- 查询所有的列数据
                    select * from 表名;
                    -- 只查询不重复的值
                    select distinct 列名 from 表名;

我们也可以添加where字句来限定查询目标:
                    select * from 表名 where 条件;

常用查询条件
    > 一般的比较运算符: 包括 = > < >= <= !=等
    > 是否在集合中: in, not in
    > 字符模糊匹配: like, not like
    > 多重条件连接查询: and, or, not

我们来尝试使用一下上面这几种条件

排序查询
我们可以通过order by来将查询结果进行排序:
                    select * from 表名 where 条件 order by 列名 asc|desc;

使用asc表示升序排序 使用desc表示降序排序 默认为升序

我们也可以同时添加多个排序:
                    select * from 表名 where 条件 order by 列名1 asc|desc, 列名2 asc|desc;

这样会先按照列名1进行排序 每组列名1相同的数据再按照列名2排序

聚集函数
聚集函数一般用作统计 包括:
    > count([distinct]*): 统计所有的行数(distinct表示去重统计 下同)
    > count([distinct]列名): 统计某列的值总和
    > sum([distinct]列名): 求一列的和(注意: 必须是数字类型)
    > avg([distinct]列名): 求一列的平均值(注意: 必须是数字类型)
    > max([distinct]列名): 求一列的最大值
    > min([distinct]列名): 求一列的最小值

一般聚集函数是这样使用的:
                    select count(distinct 列名) from 表名 where 条件;

分组和分页查询
通过使用group by来对查询结果进行分组 它需要结合聚合函数一起使用:
                    select sum(*) from 表名 where 条件 group by 列名;

我们还可以添加having来限制分组条件:
                    select sum(*) from 表名 where 条件 group by 列名 having 约束条件;

我们还可以通过limit来限制查询的数量 只要取前n个结果:
                    select * from 表名 limit 数量;

我们还可以进行分页:
                    select * from 表名 limit 起始位置,数量;